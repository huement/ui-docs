- const stamp = Math.round(new Date().getTime() / 1000)

//Mobile Console
//- script(src="//cdn.jsdelivr.net/npm/eruda" type="text/javascript")
//- script(type="text/javascript").
//-     const el = document.getElementById("btn1");

//-     eruda.init({
//-         container: el,
//-         tool: ['console', 'elements', 'resources'],
//-         useShadowDom: true,
//-         autoScale: true,
//-         defaults: {
//-             displaySize: 80,
//-             transparency: 0.3,
//-             theme: 'Material Palenight'
//-         }
//-     });

<!-- Debugger Toolbar -->
div(id="jollybar")
    nav(class="av")
        div(class="nlogo")
            img(src= path + "img/Logo_Icon_Color.png" alt="JollyRobot")
        div(class="toggle-bars")
            div(class="bar")
            div(class="bar")
            div(class="bar")
        div(class="nnav")
            ul
                li(class="button btn console-btn")
                    #btn1
                        a.btn(href="#open-modal") ðŸ¤–
                li#debugBtn(class="text-btn-link")
                    #btn2(onclick="toggle_visibility('testing')")
                        span(class="data-label", data-mq)
                    #testing(class="debug_size_viewer")
                        p
                            b Viewport
                            span(data-viewport)
                        p
                            b Screen
                            span(data-screen)
                        p
                            b Breakpoint
                            span(data-mq2)
                        p
                            b Modular-Scale
                            span(data-scale)
                        p
                            b Font-Size
                            span#data-fontsize(data-fontsize)
                        p
                            b Line-Height
                            span#data-lineheight(data-lineheight)

                li
                    div(id="switcher")
                        div(id="switcher_wrapper" class="select")
                            select(onchange="switch_css(this.value)" name="switcher_dropdown" id="switcher_dropdown" accesskey="s")

#open-modal.modal-window
    div
        a.modal-close(href="#" title="Close") Close
        h1 VoilÃ !
        div A CSS-only modal based on the :target pseudo-class. Hope you find it helpful.
        div
            small Check out
        a(href="https://aminoeditor.com" target="_blank") ðŸ‘‰ Amino: Live CSS Editor for Chrome

<!-- Debugger Javascript -->
script(type="text/javascript" src= path + "jollybar/jollybar.js?stamp=" + stamp)

script(type="text/javascript" src="../jollybar/tmp/grid_debug.js")

script.

    function processTokenJson(json){
        GlobalTokens = json;

        var columns = 8;
        var gutter = "40px";
        var margin = "60px";

        console.log(GlobalTokens);

        json.forEach(function(token,index){
            var lh = token.line;
            var ts = token.text;
            var th = lh * ts;
            var hp = th + "px";
            console.log("Line Height"+hp);

            GRID.setBreakpoint(token.name, {
                'column-count': columns,
                'column-gutter': gutter,
                'column-margin': margin,
                'baseline-height': hp
            });
        });

        //- GRID.setBreakpoint('desktop', {
        //-     'column-count': 8,
        //-     'column-gutter': '40px',
        //-     'column-margin': '60px',
        //-     'baseline-height': '10px'
        //- });

        //- GRID.setBreakpoint('mobile', {
        //-     'column-count': 4,
        //-     'column-gutter': '20px',
        //-     'column-margin': '20px',
        //-     'baseline-height': '10px'
        //- });

        // Use mobile breakpoint when appropriate
        //- if (window.innerWidth < 999) {
        //-     GRID.use('mobile');
        //- }

        // Show the grids when the page loads.
        //- GRID.columns();
        //- GRID.baseline();

        window.onresize = gridVisible;

        gridVisible();
    }

    function gridVisible(){
        GlobalTokens.forEach(function(token,index){
            if (window.innerWidth <= token.break) {
                console.log("Using Size: "+token.name);
                GRID.use(token.name);
            }
        });

        GRID.columns();
        GRID.baseline();
    }

    //- var bodyData = document.getElementById('data-fontsize');
    //- var lineData = document.getElementById('data-lineheight');

    //- var bodyLineHeight = document.body.style;

    //- console.log(bodyData);
    //- console.log(bodyLineHeight);

    var GlobalTokens = "";

    fetch("../jollybar/tokens.json")
    .then(response => response.json())
    .then(data => processTokenJson(data));
